name: Build and Release

# Trigger the workflow when you push a tag starting with 'v'
on:
  push:
    tags:
      - 'v*'
  # Also allow manual trigger
  workflow_dispatch:

jobs:
  build:
    name: Build Windows Executable
    runs-on: windows-latest
    
    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Setup Rust
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        target: x86_64-pc-windows-msvc
    
    # Cache dependencies for faster builds
    - name: Cache cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    # Build the project in release mode
    - name: Build release
      run: cargo build --release --target x86_64-pc-windows-msvc
    
    # Run tests
    - name: Run tests
      run: cargo test --release
    
    # Rename the executable for clarity
    - name: Rename executable
      run: |
        move target\x86_64-pc-windows-msvc\release\windows-system-cleaner.exe windows-system-cleaner.exe
    
    # Upload the executable as an artifact
    - name: Upload executable
      uses: actions/upload-artifact@v3
      with:
        name: windows-system-cleaner
        path: windows-system-cleaner.exe
    
    # Create a GitHub release if this is a tag push
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: windows-system-cleaner.exe
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: Build for multiple targets
  build-cross-platform:
    name: Build Cross Platform
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            executable: windows-system-cleaner.exe
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            executable: windows-system-cleaner
          - os: macos-latest
            target: x86_64-apple-darwin
            executable: windows-system-cleaner
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        target: ${{ matrix.target }}
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.target }}
        path: target/${{ matrix.target }}/release/${{ matrix.executable }}